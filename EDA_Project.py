# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Hua39I5x0_jXFNcQ1XtYfnPzXenNhTkc
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

df = pd.read_csv('/content/drive/MyDrive/csv/train.csv')

df.head()

df['Age'].describe()

df['Age'].plot(kind='box')

df[df['Age'] > 65]

df['Age'].isnull().sum()/len(df['Age'])

df['Fare'].describe()

df['Fare'].plot(kind='hist')

"""df['Fare'].plot(kind='kde')"""

df['Fare'].skew()

df['Fare'].plot(kind ='box')

df[df['Fare'] > 250]

df['Fare'].isnull().sum()

df['Survived'].value_counts().plot(kind='pie',autopct='%0.1f%%')

df['Pclass'].value_counts().plot(kind='pie',autopct='%0.1f%%')

df['Sex'].value_counts()

df['Sex'].isnull().sum()

df['SibSp'].value_counts()

df

import seaborn as sns

sns.heatmap(pd.crosstab(df['Survived'],df['Pclass'],normalize='columns')*100)

pd.crosstab(df['Survived'],df['Sex'],normalize='columns')*100

pd.crosstab(df['Survived'],df['Embarked'],normalize='columns')*100

pd.crosstab(df['Sex'],df['Embarked'],normalize ='columns')*100

pd.crosstab(df['Pclass'],df['Embarked'],normalize ='columns')*100

df[df['Survived'] == 1]['Age'].plot(kind='kde',label='Survived')
df[df['Survived'] == 0]['Age'].plot(kind='kde',label='Died')
plt.legend()
plt.show()

df['SibSp'].value_counts()

df[df['SibSp'] == 8]

df[df['SibSp'] == 8]

df1 = pd.read_csv('/content/drive/MyDrive/csv/test.csv')
df1

df = pd.concat([df,df1])

df['individual_fare'] = df['Fare']/(df['SibSp'] + df['Parch'] + 1)

df[['individual_fare','Fare']].describe()

df['family_size'] = df['SibSp'] + df['Parch'] + 1

def transform_size(num):
  if num == 1:
    return 'alone'
  elif num>1 and num<5:
    return 'small'
  else:
    return 'large'

df['family_type'] = df['family_size'].apply(transform_size)

pd.crosstab(df['Survived'],df['family_type'],normalize='columns')*100

df['surname'] = df['Name'].str.split(',').str.get(0)

df

df['title'] = df['Name'].str.split(',').str.get(1).str.strip().str.split(' ').str.get(0)

temp_df = df[df['title'].isin(['Mr.','Miss.','Mrs.','Master.','ootherr'])]

pd.crosstab(temp_df['Survived'],temp_df['title'],normalize='columns')*100

df['title'].value_counts()

df

df['title']

df['title'] = df['title'].str.replace('Rev.','other')
df['title'] = df['title'].str.replace('Dr.','other')
df['title'] = df['title'].str.replace('Col.','other')
df['title'] = df['title'].str.replace('Major.','other')
df['title'] = df['title'].str.replace('Capt.','other')
df['title'] = df['title'].str.replace('the.','other')
df['title'] = df['title'].str.replace('Jonkheer.','other')

df['title']

df['Cabin'].isnull().sum()/len(df['Cabin'])

df['Cabin'].value_counts(15)

df['Cabin'].fillna('M',inplace=True)

df['Cabin'].value_counts()

df['deck'] = df['Cabin'].str[0]

df['deck'].value_counts()

pd.crosstab(df['deck'],df['Survived'],normalize='index').plot(kind='bar',stacked = True)